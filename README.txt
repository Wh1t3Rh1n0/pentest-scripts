Pentest Scripts
---------------
A collection of scripts I use for pentesting.

The rest of this readme was automatically generated with the following command:

for f in * ; do echo "---[ $f ]---" >> README.txt ; ./$f --help >> README.txt ; echo >> README.txt ; done



---[ extract-hashes-responder ]---
##
## extract-hashes-responder by Wh1t3Rh1n0
## ========================--------------
## Extracts one hash per user from a Responder-Session.log file for easy
## cracking with hashcat.
##
## Usage: ./extract-hashes-responder </opt/Responder/Responder-Session.log> [Result number]
##

---[ gnmap2ip ]---
##
## gnmap2ip
## --------
## Converts a .gnmap file to an list of colon separated IP and TCP port numbers.
##
## Usage: gnmap2ip [GNMAP FILE]
##
## Requires: grep
## Limitations: Only handles TCP ports. Ignores UDP ports. 
##

---[ grip ]---
##
## greps a file for valid IPv4 addresses.
##
## usage: grip <filename>
##

---[ ip2dec.py ]---

ip2dec.py
---------
Converts an IP address to its decimal equivalent.

Usage: ip2dec.py [IP Address]


---[ iplist2dirs ]---
##
## iplist2dirs
## -----------
## Reads an IP:Port list and creates the following directory structure for 
## each IP address:
##
##     ./[OUTPUT DIR]/[PORT]/[IP Address]
##
## Usage: iplist2dirs <IP List> [Ports]
##
## Example: iplist2dirs iplist.txt "80 443"
##
## Use "all" in place of port numbers to create a directory for every port listed.
##
## If ports are omitted, the default port list is used.
## The defaul port list and output directory name can be changed in the settings
## section of this script.
##

---[ iplist-detect_http.sh ]---
##
## iplist-detect_http
## ------------------
## Retrieves HTTP headers from each server listed in a IP:Port formatted file.
##
## Usage: iplist-detect_http <IP List File> [Maximum Connect Timeout]
##

---[ Kali_Linux_Extra_Tools2.sh ]---
##
## Kali Linux: Extra tools and customizations script
## =================================================
## Created by Wh1t3Rh1n0
##
## This script adds a bunch of my favorite tools to Kali Linux.
## * 2015-09-09: In the process of being updated for Kali 2 Light Edition
##
## Usage: ./Kali_Linux_Extra_Tools2.sh install
##

---[ Kali_Linux_Extra_Tools.sh ]---
##
## Kali Linux: Extra tools and customizations script
## =================================================
## Created by Wh1t3Rh1n0
##
## This script adds a bunch of my favorite tools to Kali Linux.
##
## Usage: ./Kali_Linux_Extra_Tools.sh install
##
## Unattended install (skips Veil install script):
##   ./Kali_Linux_Extra_Tools.sh install unattended
##

---[ live-usb-tweaks.sh ]---
##
## live-usb-tweaks.sh
## ------------------
## Install tweaks to increase performance when running
## Kali from a LiveUSB with persistence.
##
## Usage: ./live-usb-tweaks.sh install
##

---[ merge-hashcat.py ]---

merge-hashcat.py
----------------
Matches passwords cracked with hashcat to their usernames.

Usage: merge-hashcat.py <user:hash file> <hash:password file>

Notes: The "hash:password" file is created by hashcat's -o option.

       The "user:hash" file is easy to create using your original hashdump and
       the "cut" command. An example of creating this file from hashes dumped
       from a Windows domain controller follows:
       
       cat raw_dump.txt | cut -d ':' -f 1,4 > dumped-users_hashes.txt


---[ ms15-034_check.py ]---
Usage: %s <URL>

Example: %s 'https://example.com:8443/'

---[ mv-screenshots ]---
##
## mv-screenshots
## --------------
## Moves screenshots from the current directory to a destination directory.
## Removes colons from the filename for Windows compatibility.
##
## Usage: mv-screenshots <DESTINATION>
##

---[ ncsv2ip ]---
##
## ncsv2ip
## -------
## Converts a Nessus exported CSV file to a colon-separated list of IPs and ports
##
## Usage: ncsv2ip [CSV FILE]
##
## Requires: grep, awk, sort
## Limitations: Only outputs TCP ports. UDP ports are ignored.
##

---[ README.txt ]---

---[ setup-torbrowser-limited.sh ]---
##
## setup-torbrowser-limited.sh | by Wh1t3Rh1n0 
## -------------------------------------------
## 
## usage: setup-torbrowser-limited.sh <full path to torbrowser.xz file>
##
## uninstall: setup-torbrowser-limited.sh --remove
##

---[ setup-x-limited.sh ]---
##
## ----------------------------------
## setup-x-limited.sh | by Wh1t3Rh1n0 
## ----------------------------------
##
## This script creates a script and a menu icon for executing a given program
## as a regular, non-root user while you are logged in as root. Fully tested
## with Kali Linux 1.0.7 where I do not like running my web browser, IRC 
## client, etc. as root, but logging in as root is so convenient for everything
## else.
##
## The following environment variables need to be set for it to run:
##
## script_name - the filename that the created script will be saved as.
## iw_user - the user that will be created for running the target program.
## program_description - the name that will show on the icon.
## command_line - the path of the target program to be run.
## icon - the icon to display on the menu
## categories - where the icon is placed within the applications menu.
##
## Example execution:
## ------------------
## script_name=firefox-nonroot iw_user=firefox-user \
## program_description="Firefox (Non-Root)" \
## command_line="/opt/firefox/firefox" \
## icon="/opt/firefox/browser/icons/mozicon128.png" catagories="Network;" \
## ./setup-x-limited.sh
##

---[ snap ]---
##
## snap
## ----
## A work-in-progress script to snap windows to different parts of the screen.
##
## Usage: snap [tl/tr/bl/br]
##

